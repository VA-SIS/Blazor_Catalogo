@page "/produto/detalhe/{produtoid:int}"
@inject ILogger<Detalhe> logger
@inject HttpClient http

    <div class="col-sm-12 col-lg-12 col-md-12">
        <div class="card" style="border: none">
            <img src="data:image/jpge;base64,@produto.ImagemUrl" class="img-rounded"
                 alt="@produto.Nome" width="300" height="300" />
            <div class="card-body">
                <h3 class="pull-right">@produto.Preco</h3>
                <h3 class="card-title">@produto.Nome</h3>
                <p class="card-text">@produto.Descricao</p>
            </div>
        </div>
    </div>

<div>
    <a href="/catalogo/@produto.CategoriaId" class="btn btn-link">Retornar</a>
</div>

@code {
    Produto produto = new Produto();

    [Parameter]
    public int produtoid { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        try
        {
            logger.LogInformation("Iniciando carregamento do produto...");
            produto = await http.GetFromJsonAsync<Produto>($"api/produto/{produtoid}") ?? new Produto();
            logger.LogInformation("Produto carregado com sucesso.");
        }
        catch (Exception ex)
        {
            logger.LogError(ex, "Erro ao carregar o produto");
            // Você pode tratar o erro de forma apropriada aqui, 
            // como exibir uma mensagem de erro na UI.
        }
    }
}
